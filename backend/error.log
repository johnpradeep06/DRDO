{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:208:41\n' +
    '\n' +
    '  205 //fetching jobs for the recruiter\n' +
    "  206 app.get('/api/get-jobposts', async (req, res) => {\n" +
    '  207     try {\n' +
    '→ 208       const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:07:18.730Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:208:41\n' +
    '\n' +
    '  205 //fetching jobs for the recruiter\n' +
    "  206 app.get('/api/get-jobposts', async (req, res) => {\n" +
    '  207     try {\n' +
    '→ 208       const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:07:18.865Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:208:41\n' +
    '\n' +
    '  205 //fetching jobs for the recruiter\n' +
    "  206 app.get('/api/get-jobposts', async (req, res) => {\n" +
    '  207     try {\n' +
    '→ 208       const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:09:06.062Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:208:41\n' +
    '\n' +
    '  205 //fetching jobs for the recruiter\n' +
    "  206 app.get('/api/get-jobposts', async (req, res) => {\n" +
    '  207     try {\n' +
    '→ 208       const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:09:06.823Z'
}
{
  message: 'Error creating job posting: \n' +
    'Invalid `prisma.job.create()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:182:39\n' +
    '\n' +
    '  179   salary\n' +
    '  180 } = req.body;\n' +
    '  181 \n' +
    '→ 182 const newJob = await prisma.job.create({\n' +
    '        data: {\n' +
    '          recruiterName: "b",\n' +
    '          jobTitle: "asda",\n' +
    '          jobDescription: "asdas",\n' +
    '          employmentType: "part-time",\n' +
    '          requiredSkills: "asdas",\n' +
    '          requiredExperience: "1",\n' +
    '          educationalLevel: "adsa",\n' +
    '          contactInfo: "879764321",\n' +
    '          location: "asda",\n' +
    '          companyName: "asdasd",\n' +
    '          salary: "15000",\n' +
    '      +   recruiter: {\n' +
    '      +     create: UserCreateWithoutPostedJobsInput | UserUncheckedCreateWithoutPostedJobsInput,\n' +
    '      +     connectOrCreate: UserCreateOrConnectWithoutPostedJobsInput,\n' +
    '      +     connect: UserWhereUniqueInput\n' +
    '      +   }\n' +
    '        }\n' +
    '      })\n' +
    '\n' +
    'Argument `recruiter` is missing.',
  level: 'error',
  timestamp: '2024-09-27T11:15:35.050Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:320:39\n' +
    '\n' +
    '  317 // Get all job posts\n' +
    "  318 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  319   try {\n' +
    '→ 320     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:28:57.866Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:320:39\n' +
    '\n' +
    '  317 // Get all job posts\n' +
    "  318 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  319   try {\n' +
    '→ 320     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:28:58.166Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:320:39\n' +
    '\n' +
    '  317 // Get all job posts\n' +
    "  318 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  319   try {\n' +
    '→ 320     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:30:19.033Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:320:39\n' +
    '\n' +
    '  317 // Get all job posts\n' +
    "  318 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  319   try {\n' +
    '→ 320     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:30:19.173Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:320:39\n' +
    '\n' +
    '  317 // Get all job posts\n' +
    "  318 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  319   try {\n' +
    '→ 320     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:30:50.604Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:320:39\n' +
    '\n' +
    '  317 // Get all job posts\n' +
    "  318 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  319   try {\n' +
    '→ 320     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:30:50.714Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:53:38.622Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:53:38.919Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:53:50.567Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:53:50.681Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:208:41\n' +
    '\n' +
    '  205 //fetching jobs for the recruiter\n' +
    "  206 app.get('/api/get-jobposts', async (req, res) => {\n" +
    '  207     try {\n' +
    '→ 208       const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:55:36.376Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:208:41\n' +
    '\n' +
    '  205 //fetching jobs for the recruiter\n' +
    "  206 app.get('/api/get-jobposts', async (req, res) => {\n" +
    '  207     try {\n' +
    '→ 208       const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:55:36.495Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:56:23.068Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T11:56:23.181Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T12:01:58.314Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T12:01:58.414Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T12:02:36.021Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T12:02:36.089Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T12:02:54.084Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:330:39\n' +
    '\n' +
    '  327 // Get all job posts\n' +
    "  328 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  329   try {\n' +
    '→ 330     const jobPosts = await prisma.job.findMany(\n' +
    'Error converting field "recruiterId" of expected non-nullable type "String", found incompatible value of "null".',
  level: 'error',
  timestamp: '2024-09-27T12:02:54.155Z'
}
{
  message: 'Error fetching job posts for recruiter: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:250:41\n' +
    '\n' +
    "  247 app.get('/api/recruiter/get-jobposts', verifyToken, verifyRole('RECRUITER'), async (req, res) => {\n" +
    '  248     try {\n' +
    '  249       const recruiterId = req.user.userId; // Get recruiter ID from JWT token\n' +
    '→ 250       const jobPosts = await prisma.job.findMany(\n' +
    'Raw query failed. Code: `unknown`. Message: `Kind: I/O error: An existing connection was forcibly closed by the remote host. (os error 10054), labels: {}`',
  level: 'error',
  timestamp: '2024-09-27T12:49:50.477Z'
}
{
  message: 'Error fetching user info: \n' +
    'Invalid `prisma.user.findUnique()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:149:40\n' +
    '\n' +
    '  146 //for jwt authentication\n' +
    "  147 app.get('/api/user', verifyToken, async (req, res) => {\n" +
    '  148     try {\n' +
    '→ 149         const user = await prisma.user.findUnique(\n' +
    'Raw query failed. Code: `unknown`. Message: `Kind: I/O error: An existing connection was forcibly closed by the remote host. (os error 10054), labels: {}`',
  level: 'error',
  timestamp: '2024-09-27T12:49:50.611Z'
}
{
  message: 'Error fetching job posts for recruiter: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:250:41\n' +
    '\n' +
    "  247 app.get('/api/recruiter/get-jobposts', verifyToken, verifyRole('RECRUITER'), async (req, res) => {\n" +
    '  248     try {\n' +
    '  249       const recruiterId = req.user.userId; // Get recruiter ID from JWT token\n' +
    '→ 250       const jobPosts = await prisma.job.findMany(\n' +
    'Raw query failed. Code: `unknown`. Message: `Kind: I/O error: timed out, labels: {"RetryableWriteError"}`',
  level: 'error',
  timestamp: '2024-09-27T12:50:00.295Z'
}
{
  message: 'Error deleting job post: \n' +
    'Invalid `prisma.job.delete()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:264:47\n' +
    '\n' +
    "  261 app.delete('/api/recruiter/delete-jobpost/:id', verifyToken, verifyRole('RECRUITER'), async (req, res) => {\n" +
    '  262   const jobId = req.params.id;\n' +
    '  263   try {\n' +
    '→ 264     const deletedJob = await prisma.job.delete(\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.',
  level: 'error',
  timestamp: '2024-09-27T12:50:38.691Z'
}
{
  message: 'Error deleting job post: \n' +
    'Invalid `prisma.job.delete()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:264:47\n' +
    '\n' +
    "  261 app.delete('/api/recruiter/delete-jobpost/:id', verifyToken, verifyRole('RECRUITER'), async (req, res) => {\n" +
    '  262   const jobId = req.params.id;\n' +
    '  263   try {\n' +
    '→ 264     const deletedJob = await prisma.job.delete(\n' +
    'Inconsistent column data: Malformed ObjectID: provided hex string representation must be exactly 12 bytes, instead got: ":66f6a996001895aa3e73fc99", length 25.',
  level: 'error',
  timestamp: '2024-09-27T12:50:38.698Z'
}
{
  message: 'Error deleting job post: \n' +
    'Invalid `prisma.job.delete()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:264:47\n' +
    '\n' +
    "  261 app.delete('/api/recruiter/delete-jobpost/:id', verifyToken, verifyRole('RECRUITER'), async (req, res) => {\n" +
    '  262   const jobId = req.params.id;\n' +
    '  263   try {\n' +
    '→ 264     const deletedJob = await prisma.job.delete(\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.',
  level: 'error',
  timestamp: '2024-09-27T12:50:38.764Z'
}
{
  message: 'Error deleting job post: \n' +
    'Invalid `prisma.job.delete()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:264:47\n' +
    '\n' +
    "  261 app.delete('/api/recruiter/delete-jobpost/:id', verifyToken, verifyRole('RECRUITER'), async (req, res) => {\n" +
    '  262   const jobId = req.params.id;\n' +
    '  263   try {\n' +
    '→ 264     const deletedJob = await prisma.job.delete(\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.',
  level: 'error',
  timestamp: '2024-09-27T12:50:38.983Z'
}
{
  message: 'Error deleting job post: \n' +
    'Invalid `prisma.job.delete()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:264:47\n' +
    '\n' +
    "  261 app.delete('/api/recruiter/delete-jobpost/:id', verifyToken, verifyRole('RECRUITER'), async (req, res) => {\n" +
    '  262   const jobId = req.params.id;\n' +
    '  263   try {\n' +
    '→ 264     const deletedJob = await prisma.job.delete(\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.',
  level: 'error',
  timestamp: '2024-09-27T12:50:38.988Z'
}
{
  message: 'Error deleting job post: \n' +
    'Invalid `prisma.job.delete()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:264:47\n' +
    '\n' +
    "  261 app.delete('/api/recruiter/delete-jobpost/:id', verifyToken, verifyRole('RECRUITER'), async (req, res) => {\n" +
    '  262   const jobId = req.params.id;\n' +
    '  263   try {\n' +
    '→ 264     const deletedJob = await prisma.job.delete(\n' +
    'Inconsistent column data: Malformed ObjectID: provided hex string representation must be exactly 12 bytes, instead got: ":66f6a996001895aa3e73fc99", length 25.',
  level: 'error',
  timestamp: '2024-09-27T12:50:56.950Z'
}
{
  message: 'Error deleting job post: \n' +
    'Invalid `prisma.job.delete()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:264:47\n' +
    '\n' +
    "  261 app.delete('/api/recruiter/delete-jobpost/:id', verifyToken, verifyRole('RECRUITER'), async (req, res) => {\n" +
    '  262   const jobId = req.params.id;\n' +
    '  263   try {\n' +
    '→ 264     const deletedJob = await prisma.job.delete(\n' +
    'An operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.',
  level: 'error',
  timestamp: '2024-09-27T13:10:16.419Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:332:39\n' +
    '\n' +
    '  329 // Get all job posts\n' +
    "  330 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  331   try {\n' +
    '→ 332     const jobPosts = await prisma.job.findMany(\n' +
    'Raw query failed. Code: `unknown`. Message: `Kind: Server selection timeout: No available servers. Topology: { Type: ReplicaSetNoPrimary, Set Name: atlas-2icxhc-shard-0, Max Set Version: 101, Max Election ID: 7fffffff0000000000000065, Servers: [ { Address: cluster0-shard-00-00.ndqew.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: timed out, labels: {} }, { Address: cluster0-shard-00-01.ndqew.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: timed out, labels: {} }, { Address: cluster0-shard-00-02.ndqew.mongodb.net:27017, Type: Unknown, Error: Kind: I/O error: timed out, labels: {} } ] }, labels: {}`',
  level: 'error',
  timestamp: '2024-09-27T16:11:19.062Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:11:14.362Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:11:28.699Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:11:28.702Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:13:53.627Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:13:53.633Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:13:53.636Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:14:06.500Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:14:06.503Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:14:52.791Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:14:52.793Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:15:14.820Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:15:14.823Z'
}
{
  message: 'candidateId is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T00:16:31.923Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:50
  
    155 
    156 try {
    157   // Fetch all PDFDocuments for the given candidate, and include associated job data
  → 158   const appliedJobs = await prisma.pDFDocument.findMany({
            where: {
              userId: "66f101cbe9345e84052e409f"
            },
            include: {
              job: true,
              ~~~
          ?   user?: true
            }
          })
  
  Unknown field `job` for include statement on model `PDFDocument`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:25 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for candidateId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:16:48.088Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:50
  
    155 
    156 try {
    157   // Fetch all PDFDocuments for the given candidate, and include associated job data
  → 158   const appliedJobs = await prisma.pDFDocument.findMany({
            where: {
              userId: "66f101cbe9345e84052e409f"
            },
            include: {
              job: true,
              ~~~
          ?   user?: true
            }
          })
  
  Unknown field `job` for include statement on model `PDFDocument`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:25 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for candidateId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:17:33.509Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:50
  
    155 
    156 try {
    157   // Fetch all PDFDocuments for the given candidate, and include associated job data
  → 158   const appliedJobs = await prisma.pDFDocument.findMany({
            where: {
              userId: "66f101cbe9345e84052e409f"
            },
            include: {
              job: true,
              ~~~
          ?   user?: true
            }
          })
  
  Unknown field `job` for include statement on model `PDFDocument`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:25 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for candidateId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:17:34.704Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:50
  
    155 
    156 try {
    157   // Fetch all PDFDocuments for the given candidate, and include associated job data
  → 158   const appliedJobs = await prisma.pDFDocument.findMany({
            where: {
              userId: "66f101cbe9345e84052e409f"
            },
            include: {
              job: true,
              ~~~
          ?   user?: true
            }
          })
  
  Unknown field `job` for include statement on model `PDFDocument`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:25 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for candidateId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:18:20.162Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:50
  
    155 
    156 try {
    157   // Fetch all PDFDocuments for the given candidate, and include associated job data
  → 158   const appliedJobs = await prisma.pDFDocument.findMany({
            where: {
              userId: "66f101cbe9345e84052e409f"
            },
            include: {
              job: true,
              ~~~
          ?   user?: true
            }
          })
  
  Unknown field `job` for include statement on model `PDFDocument`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:25 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for candidateId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:18:20.169Z'
}
{
  error: PrismaClientKnownRequestError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:50
  
    155 
    156 try {
    157   // Fetch all PDFDocuments for the given candidate, and include associated job data
  → 158   const appliedJobs = await prisma.pDFDocument.findMany(
  Error converting field "jobId" of expected non-nullable type "String", found incompatible value of "null".
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7753)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:25 {
    code: 'P2032',
    clientVersion: '5.20.0',
    meta: {
      modelName: 'PDFDocument',
      field: 'jobId',
      expected_type: 'String',
      found: 'null'
    }
  },
  level: 'error',
  message: 'Error fetching applied jobs for candidateId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:19:03.351Z'
}
{
  error: PrismaClientKnownRequestError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:50
  
    155 
    156 try {
    157   // Fetch all PDFDocuments for the given candidate, and include associated job data
  → 158   const appliedJobs = await prisma.pDFDocument.findMany(
  Error converting field "jobId" of expected non-nullable type "String", found incompatible value of "null".
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7753)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:25 {
    code: 'P2032',
    clientVersion: '5.20.0',
    meta: {
      modelName: 'PDFDocument',
      field: 'jobId',
      expected_type: 'String',
      found: 'null'
    }
  },
  level: 'error',
  message: 'Error fetching applied jobs for candidateId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:19:03.407Z'
}
{
  error: PrismaClientKnownRequestError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:53
  
    155   
    156 try {
    157   // Step 1: Fetch all PDFDocuments for the given userId (candidate) to get jobIds
  → 158   const pdfDocuments = await prisma.pDFDocument.findMany(
  Error converting field "jobId" of expected non-nullable type "String", found incompatible value of "null".
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7753)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:28 {
    code: 'P2032',
    clientVersion: '5.20.0',
    meta: {
      modelName: 'PDFDocument',
      field: 'jobId',
      expected_type: 'String',
      found: 'null'
    }
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:21:47.285Z'
}
{
  error: PrismaClientKnownRequestError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:53
  
    155   
    156 try {
    157   // Step 1: Fetch all PDFDocuments for the given userId (candidate) to get jobIds
  → 158   const pdfDocuments = await prisma.pDFDocument.findMany(
  Error converting field "jobId" of expected non-nullable type "String", found incompatible value of "null".
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7753)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:158:28 {
    code: 'P2032',
    clientVersion: '5.20.0',
    meta: {
      modelName: 'PDFDocument',
      field: 'jobId',
      expected_type: 'String',
      found: 'null'
    }
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:21:47.342Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.job.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:176:44
  
    173 }
    174   
    175 // Step 3: Fetch all jobs where the jobId is in the list of jobIds
  → 176 const appliedJobs = await prisma.job.findMany({
          where: {
            id: {
              in: [
                null,
                "66f172ab640988171d2edd89",
                "66f17b4f42bd237355ea0128"
              ]
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            }
          }
        })
  
  Argument `in`: Invalid value provided. Expected ListStringFieldRefInput, provided (Null, String, String).
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:176:27 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:23:40.912Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.job.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:176:44
  
    173 }
    174   
    175 // Step 3: Fetch all jobs where the jobId is in the list of jobIds
  → 176 const appliedJobs = await prisma.job.findMany({
          where: {
            id: {
              in: [
                null,
                "66f172ab640988171d2edd89",
                "66f17b4f42bd237355ea0128"
              ]
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            }
          }
        })
  
  Argument `in`: Invalid value provided. Expected ListStringFieldRefInput, provided (Null, String, String).
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:176:27 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T00:23:40.964Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:156:51
  
    153 }
    154 
    155 try {
  → 156   const pdfDocuments = await prisma.pDFDocument.findMany({
            where: {
              userId: "66f101cbe9345e84052e409f"
            },
            include: {
              job: true,
              ~~~
              application: {
                select: {
                  status: true
                }
              }
            }
          })
  
  Unknown field `job` for include statement on model `PDFDocument`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:156:26 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T04:25:55.665Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:156:51
  
    153 }
    154 
    155 try {
  → 156   const pdfDocuments = await prisma.pDFDocument.findMany({
            where: {
              userId: "66f101cbe9345e84052e409f"
            },
            include: {
              job: true,
              ~~~
              application: {
                select: {
                  status: true
                }
              }
            }
          })
  
  Unknown field `job` for include statement on model `PDFDocument`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:156:26 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T04:25:55.671Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:156:51
  
    153 }
    154 
    155 try {
  → 156   const pdfDocuments = await prisma.pDFDocument.findMany({
            where: {
              userId: "66f101cbe9345e84052e409f"
            },
            include: {
              jobId: true,
              ~~~~~
              application: {
                select: {
                  status: true
                }
              }
            }
          })
  
  Invalid scalar field `jobId` for include statement on model PDFDocument. Available options are marked with ?.
  Note that include statements only accept relation fields.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at e.throwValidationError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:13383)
      at sm (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:9949)
      at om (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:9702)
      at im (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:9588)
      at Dr (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:9232)
      at pl (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:9079)
      at C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:10186
      at Object.runInChildSpan (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:1519)
      at t._executeRequest (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:10165) {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T04:27:17.691Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.pDFDocument.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:156:51
  
    153 }
    154 
    155 try {
  → 156   const pdfDocuments = await prisma.pDFDocument.findMany({
            where: {
              userId: "66f101cbe9345e84052e409f"
            },
            include: {
              jobId: true,
              ~~~~~
              application: {
                select: {
                  status: true
                }
              }
            }
          })
  
  Invalid scalar field `jobId` for include statement on model PDFDocument. Available options are marked with ?.
  Note that include statements only accept relation fields.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at e.throwValidationError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:13383)
      at sm (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:9949)
      at om (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:9702)
      at im (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:9588)
      at Dr (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:9232)
      at pl (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:9079)
      at C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:10186
      at Object.runInChildSpan (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:1519)
      at t._executeRequest (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:10165) {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T04:27:17.698Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.job.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:174:42
  
    171 }
    172 
    173 // Step 3: Fetch all jobs where the jobId is in the list of jobIds
  → 174 const appliedJobs = await prisma.job.findMany({
          where: {
            id: {
              in: [
                "66f172ab640988171d2edd89",
                "66f17b4f42bd237355ea0128"
              ]
            }
          },
          select: {
            job: true,
            ~~~
            status: true,
        ?   id?: true,
        ?   recruiterId?: true,
        ?   jobTitle?: true,
        ?   jobDescription?: true,
        ?   employmentType?: true,
        ?   requiredSkills?: true,
        ?   requiredExperience?: true,
        ?   educationalLevel?: true,
        ?   contactInfo?: true,
        ?   location?: true,
        ?   companyName?: true,
        ?   salary?: true,
        ?   createdAt?: true,
        ?   updatedAt?: true,
        ?   recruiter?: true,
        ?   applications?: true,
        ?   _count?: true
          }
        })
  
  Unknown field `job` for select statement on model `Job`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:174:25 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T04:33:46.377Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.job.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:174:42
  
    171 }
    172 
    173 // Step 3: Fetch all jobs where the jobId is in the list of jobIds
  → 174 const appliedJobs = await prisma.job.findMany({
          where: {
            id: {
              in: [
                "66f172ab640988171d2edd89",
                "66f17b4f42bd237355ea0128"
              ]
            }
          },
          select: {
            job: true,
            ~~~
            status: true,
        ?   id?: true,
        ?   recruiterId?: true,
        ?   jobTitle?: true,
        ?   jobDescription?: true,
        ?   employmentType?: true,
        ?   requiredSkills?: true,
        ?   requiredExperience?: true,
        ?   educationalLevel?: true,
        ?   contactInfo?: true,
        ?   location?: true,
        ?   companyName?: true,
        ?   salary?: true,
        ?   createdAt?: true,
        ?   updatedAt?: true,
        ?   recruiter?: true,
        ?   applications?: true,
        ?   _count?: true
          }
        })
  
  Unknown field `job` for select statement on model `Job`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:174:25 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T04:33:46.421Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.job.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:174:42
  
    171 }
    172 
    173 // Step 3: Fetch all jobs where the jobId is in the list of jobIds
  → 174 const appliedJobs = await prisma.job.findMany({
          where: {
            id: {
              in: [
                "66f172ab640988171d2edd89",
                "66f17b4f42bd237355ea0128"
              ]
            }
          },
          select: {
            status: true,
            ~~~~~~
        ?   id?: true,
        ?   recruiterId?: true,
        ?   jobTitle?: true,
        ?   jobDescription?: true,
        ?   employmentType?: true,
        ?   requiredSkills?: true,
        ?   requiredExperience?: true,
        ?   educationalLevel?: true,
        ?   contactInfo?: true,
        ?   location?: true,
        ?   companyName?: true,
        ?   salary?: true,
        ?   createdAt?: true,
        ?   updatedAt?: true,
        ?   recruiter?: true,
        ?   applications?: true,
        ?   _count?: true
          }
        })
  
  Unknown field `status` for select statement on model `Job`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:174:25 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T04:34:38.619Z'
}
{
  error: PrismaClientValidationError: 
  Invalid `prisma.job.findMany()` invocation in
  C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:174:42
  
    171 }
    172 
    173 // Step 3: Fetch all jobs where the jobId is in the list of jobIds
  → 174 const appliedJobs = await prisma.job.findMany({
          where: {
            id: {
              in: [
                "66f172ab640988171d2edd89",
                "66f17b4f42bd237355ea0128"
              ]
            }
          },
          select: {
            status: true,
            ~~~~~~
        ?   id?: true,
        ?   recruiterId?: true,
        ?   jobTitle?: true,
        ?   jobDescription?: true,
        ?   employmentType?: true,
        ?   requiredSkills?: true,
        ?   requiredExperience?: true,
        ?   educationalLevel?: true,
        ?   contactInfo?: true,
        ?   location?: true,
        ?   companyName?: true,
        ?   salary?: true,
        ?   createdAt?: true,
        ?   updatedAt?: true,
        ?   recruiter?: true,
        ?   applications?: true,
        ?   _count?: true
          }
        })
  
  Unknown field `status` for select statement on model `Job`. Available options are marked with ?.
      at Dn (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:114:8082)
      at Mn.handleRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7396)
      at Mn.handleAndLogRequestError (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:7061)
      at Mn.request (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:121:6745)
      at async l (C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\node_modules\@prisma\client\runtime\library.js:130:9633)
      at async C:\Users\balaa\Desktop\LEARN\HACKATHONS\CODECORTEX\DRDO\backend\index.js:174:25 {
    clientVersion: '5.20.0'
  },
  level: 'error',
  message: 'Error fetching applied jobs for userId: 66f101cbe9345e84052e409f',
  timestamp: '2024-09-28T04:34:38.712Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:439:39\n' +
    '\n' +
    '  436 // Get all job posts\n' +
    "  437 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  438   try {\n' +
    '→ 439     const jobPosts = await prisma.job.findMany(\n' +
    'Raw query failed. Code: `unknown`. Message: `Kind: I/O error: timed out, labels: {"RetryableWriteError"}`',
  level: 'error',
  timestamp: '2024-09-28T05:21:31.052Z'
}
{
  message: 'Error fetching job posts: \n' +
    'Invalid `prisma.job.findMany()` invocation in\n' +
    'D:\\DRDO\\DRDO\\backend\\index.js:439:39\n' +
    '\n' +
    '  436 // Get all job posts\n' +
    "  437 app.get('/api/candidate/get-jobposts', async (req, res) => {\n" +
    '  438   try {\n' +
    '→ 439     const jobPosts = await prisma.job.findMany(\n' +
    'Raw query failed. Code: `unknown`. Message: `Kind: I/O error: timed out, labels: {"RetryableWriteError"}`',
  level: 'error',
  timestamp: '2024-09-28T05:21:32.037Z'
}
{
  message: 'Recruiter ID is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T06:06:02.906Z'
}
{
  message: 'Recruiter ID is missing in the request',
  level: 'error',
  timestamp: '2024-09-28T06:06:02.908Z'
}
{
  level: 'error',
  message: 'Error fetching applied jobs: recruiterId is not defined',
  stack: 'ReferenceError: recruiterId is not defined\n' +
    '    at C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:292:69',
  timestamp: '2024-09-28T06:16:48.176Z'
}
{
  level: 'error',
  message: 'Error fetching applied jobs: recruiterId is not defined',
  stack: 'ReferenceError: recruiterId is not defined\n' +
    '    at C:\\Users\\balaa\\Desktop\\LEARN\\HACKATHONS\\CODECORTEX\\DRDO\\backend\\index.js:292:69',
  timestamp: '2024-09-28T06:16:48.275Z'
}
