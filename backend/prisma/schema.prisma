generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  fullName     String
  email        String    @unique
  phoneNumber  String    @unique
  password     String
  role         Role
  createdAt    DateTime  @default(now())
  postedJobs   Job[]     @relation("RecruiterJobs")   // For recruiters
  applications Application[] @relation("UserApplications") // For candidates
}

enum Role {
  RECRUITER
  CANDIDATE
}

model Job {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  recruiter         User         @relation("RecruiterJobs", fields: [recruiterId], references: [id]) // Recruiter who posted the job
  recruiterId       String       @db.ObjectId
  jobTitle          String
  jobDescription    String
  employmentType    String
  requiredSkills    String
  requiredExperience String
  educationalLevel  String
  contactInfo       String
  location          String
  companyName       String
  salary            String?
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  applications      Application[] @relation("JobApplications") // List of applications for this job
}

model Application {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  candidate    User      @relation("UserApplications", fields: [candidateId], references: [id]) // Candidate who applied
  candidateId  String    @db.ObjectId
  job          Job       @relation("JobApplications", fields: [jobId], references: [id]) // Job applied for
  jobId        String    @db.ObjectId
  status       ApplicationStatus @default(PENDING) // Status of the application
  appliedAt    DateTime  @default(now())  // Time of application
}

enum ApplicationStatus {
  PENDING
  QUALIFIED_FOR_INTERVIEW
  REJECTED
  WAITING
}
