generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  fullName     String
  email        String        @unique
  phoneNumber  String        @unique
  password     String
  role         Role
  createdAt    DateTime      @default(now())
  postedJobs   Job[]         @relation("RecruiterJobs")
  applications Application[] @relation("CandidateApplications")
  pdfDocuments PDFDocument[] @relation("UserPDFs") // One-to-many relation with PDFDocument
}

enum Role {
  RECRUITER
  CANDIDATE
}

model Job {
  id                 String        @id @default(auto()) @map("_id") @db.ObjectId
  recruiter          User?         @relation("RecruiterJobs", fields: [recruiterId], references: [id])
  recruiterId        String?       @db.ObjectId // Optional; remove '?' if recruiter is mandatory
  jobTitle           String
  jobDescription     String
  employmentType     String
  requiredSkills     String
  requiredExperience String
  educationalLevel   String
  contactInfo        String
  location           String
  companyName        String
  salary             String?       // Optional field
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  applications       Application[] @relation("JobApplications")
}

model Application {
  id           String            @id @default(auto()) @map("_id") @db.ObjectId
  candidate    User              @relation("CandidateApplications", fields: [candidateId], references: [id])
  candidateId  String            @db.ObjectId
  job          Job               @relation("JobApplications", fields: [jobId], references: [id])
  jobId        String            @db.ObjectId
  status       ApplicationStatus @default(PENDING)
  appliedAt    DateTime          @default(now())
}

enum ApplicationStatus {
  PENDING
  QUALIFIED_FOR_INTERVIEW
  REJECTED
  WAITING
}

model PDFDocument {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  filename    String
  uploadDate  DateTime @default(now())
  user        User?    @relation("UserPDFs", fields: [userId], references: [id])
  userId      String   @db.ObjectId // No @unique since a user can upload multiple PDFs
  jobId       String   @db.ObjectId // Reference to the job for which the PDF was uploaded
}
